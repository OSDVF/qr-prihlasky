name: live
'on':
  deployment:
  workflow_dispatch:
jobs:
  deploy:
    if: github.event.deployment.payload == 'firebase' || github.event_name == 'workflow_dispatch'
    permissions:
      id-token: write
      contents: read
      pull-requests: write
      actions: read
      deployments: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v4

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        if: github.event_name != 'deployment'
        id: deployment
        with:
          token: '${{ github.token }}'
          environment: live

      - run: mkdir -p dist

      - name: Download distribution artifact
        uses: dawidd6/action-download-artifact@v8
        with:
          workflow: build.yml
          workflow_conclusion: success
          name: dist
          path: dist

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: hosting
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PRIHLASKY_16C39 }}'
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
          channelId: ${{ github.event.deployment.environment || 'live' }}
          
      - name: Set deployment status
        uses: avakar/set-deployment-status@v1
        if: success()
        with:
          state: success
          deployment_id: ${{ github.event_name == 'deployment' && github.event.deployment.id || steps.deployment.outputs.deployment_id }}
          environment_url: ${{ steps.hosting.outputs.details_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set deployment fail
        uses: avakar/set-deployment-status@v1
        if: failure()
        with:
          state: failure
          deployment_id: ${{ github.event_name == 'deployment' && github.event.deployment.id || steps.deployment.outputs.deployment_id }}
          environment_url: ${{ steps.hosting.outputs.details_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


